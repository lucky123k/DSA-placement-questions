class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int n=nums.length;
        int nums_sum=0;
        for(int i=0;i<n;i++){
            nums_sum+=nums[i];
        }
        if((target+nums_sum)%2!=0){
            return 0;
        }
        int subsetSum=(target+nums_sum)/2;
        if(subsetSum<0){
            return 0;
        }
        int[][] dp = new int[n+1][subsetSum+1];
        for(int i=0;i<dp.length;i++){
            dp[i][0]=1;
        }  
        for(int i=1;i<dp.length;i++){
           for(int j=0;j<dp[0].length;j++){
                if(nums[i-1]>j){
                    dp[i][j]=dp[i-1][j];
                }
                else{
                    dp[i][j]=dp[i-1][j]+dp[i-1][j-nums[i-1]];
                }
            }
        }   
        return dp[n][subsetSum];
    }
}
