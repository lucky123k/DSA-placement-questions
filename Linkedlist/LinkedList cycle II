/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        ListNode slow_p=head;
        ListNode fast_p=head;
        int flag=0;
        while(slow_p!=null && fast_p!=null && fast_p.next!=null){
            slow_p=slow_p.next;
            fast_p=fast_p.next.next;
            if(slow_p==fast_p){
                flag=1;
                break;
            }
        }
        if(flag==1){
            ListNode start=head;
            ListNode temp=slow_p;
            while(start!=temp){
                start=start.next;
                temp=temp.next;
            }
            return start;
        }else{
            return null;
        }
    }
}
